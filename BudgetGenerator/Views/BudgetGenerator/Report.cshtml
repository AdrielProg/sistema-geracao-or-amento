@model BudgetGenerator.Models.ReportModel

@{
    Layout = null;
    var featureCounter = 1;

    // Função para exibir o valor ou uma string vazia conforme padrão da empresa
    Func<int, string> displayOrEmpty = value => value > 0 ? value.ToString() : "";
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="~/css/report.css">
    <title>Budget Generator</title>
</head>

<body>
    <div class="container-logo-report">
        <img src="~/images/logo-report.jpg" alt="">
    </div>
    <div class="initial-page-footer">
        <p>DOCUMENTAÇÃO FUNCIONAL DO SISTEMA</p>
    </div>

    <div class="body-report">
        <h1>@Model.ReportTitle</h1>

        @foreach (var feature in Model.Features)
        {
            List<string> serviceList = new List<string>();
            <div class="feature-container">
                <p>Funcionalidade @featureCounter: @feature.Name (@feature.AmountHours Horas)</p>
                <ul>
                    @foreach (var service in feature.Services)
                    {
                        serviceList.Add($"{service.ServiceType} {service.Complexity}");
                    }
                    @{
                        string resultString = string.Join(" + ", serviceList);
                    }
                    <li class="services-list">@resultString</li>
                </ul>
                <p class="description-feature">@feature.Description</p>
            </div>
            featureCounter++;
        }

        @if (Model.HasOperationServices())
        {
            <div class="section-table" align="center">
                <table class="development-budget-table">
                    <thead>
                        <tr>
                            <th class="title-table-head" colspan="6">Matriz de orçamento para desenvolvimento</th>
                        </tr>
                        <tr>
                            <th class="table-header">Categoria</th>
                            <th class="table-header">Item</th>
                            <th class="table-header">Atividade Validadas</th>
                            <th class="table-header">Simples</th>
                            <th class="table-header">Médio</th>
                            <th class="table-header">Complexo</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Linha para Telas WEB -->
                        <tr>
                            <td class="category-colum">
                                <span class="developement-category">Telas</span>
                            </td>
                            <td class="dev-data">
                                <span class="developement-item">WEB</span>
                            </td>
                            <td class="developement-activities">
                                Quantidade de colunas; Filtros Dinâmicos; Paginação; Ordenação.
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "telas" && s.ServiceType.ToLower() == "web" &&
                                         s.Complexity.ToLower() == "facil" && s.Category.ToLower() == "operacoes"))
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "telas" && s.ServiceType.ToLower() == "web" &&
                                         s.Complexity.ToLower() == "medio" && s.Category.ToLower() == "operacoes"))
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "telas" && s.ServiceType.ToLower() == "web" &&
                                         s.Complexity.ToLower() == "complexo" && s.Category.ToLower() == "operacoes"))
                            </td>
                        </tr>
                        <!-- Linha para Relatórios PDF -->
                        <tr>
                            <td rowspan="2" class="category-colum">
                                <span class="developement-category">Relatórios</span>
                            </td>
                            <td class="dev-data">
                                <span class="developement-item">PDF</span>
                            </td>
                            <td class="developement-activities">
                                Quantidade de colunas; Quantidade de tabelas.
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "relatorios" && s.ServiceType.ToLower() == "pdf" &&
                                         s.Complexity.ToLower() == "facil" && s.Category.ToLower() == "operacoes"))
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "relatorios" && s.ServiceType.ToLower() == "pdf" &&
                                         s.Complexity.ToLower() == "medio" && s.Category.ToLower() == "operacoes"))
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "relatorios" && s.ServiceType.ToLower() == "pdf" &&
                                         s.Complexity.ToLower() == "complexo" && s.Category.ToLower() == "operacoes"))
                            </td>
                        </tr>
                        <tr>
                            <td class="dev-data">
                                <p class="developement-item">Excel / Word</p>
                            </td>
                            <td class="developement-activities">
                                Quantidade de colunas; Gráficos.
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "relatorios" && s.ServiceType.ToLower() == "excel_word" &&
                                         s.Complexity.ToLower() == "facil" && s.Category.ToLower() == "operacoes"))
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "relatorios" && s.ServiceType.ToLower() == "excel_word" &&
                                         s.Complexity.ToLower() == "medio" && s.Category.ToLower() == "operacoes"))
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "relatorios" && s.ServiceType.ToLower() == "excel_word" &&
                                         s.Complexity.ToLower() == "complexo" && s.Category.ToLower() == "operacoes"))
                            </td>
                        </tr>
                        <tr>
                            <td rowspan="6" class="category-colum">
                                <span class="developement-category">SQL</span>
                            </td>
                            <td class="dev-data">
                                <span class="developement-item">Procedure</span>
                            </td>
                            <td class="developement-activities">
                                Quantidade de campos; Quantidade de tabelas.
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "sql" && s.ServiceType.ToLower() == "procedure" &&
                                         s.Complexity.ToLower() == "facil" && s.Category.ToLower() == "operacoes"))
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "sql" && s.ServiceType.ToLower() == "procedure" &&
                                         s.Complexity.ToLower() == "medio" && s.Category.ToLower() == "operacoes"))
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "sql" && s.ServiceType.ToLower() == "procedure" &&
                                         s.Complexity.ToLower() == "complexo" && s.Category.ToLower() == "operacoes"))
                            </td>
                        </tr>
                        <!-- SQL Job -->
                        <tr>
                            <td class="dev-data">
                                <span class="developement-item">JOB</span>
                            </td>
                            <td class="developement-activities">
                                Quantidade de tabelas; Quantidade de operações.
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "sql" && s.ServiceType.ToLower() == "job" &&
                                         s.Complexity.ToLower() == "facil" && s.Category.ToLower() == "operacoes"))
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "sql" && s.ServiceType.ToLower() == "job" &&
                                         s.Complexity.ToLower() == "medio" && s.Category.ToLower() == "operacoes"))
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "sql" && s.ServiceType.ToLower() == "job" &&
                                         s.Complexity.ToLower() == "complexo" && s.Category.ToLower() == "operacoes"))
                            </td>
                        </tr>
                        <!-- SQL Trigger -->
                        <tr>
                            <td class="dev-data">
                                <span class="developement-item">Trigger</span>
                            </td>
                            <td class="developement-activities">
                                Quantidade de operações.
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "sql" && s.ServiceType.ToLower() == "trigger" &&
                                         s.Complexity.ToLower() == "facil" && s.Category.ToLower() == "operacoes"))
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "sql" && s.ServiceType.ToLower() == "trigger" &&
                                         s.Complexity.ToLower() == "medio" && s.Category.ToLower() == "operacoes"))
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "sql" && s.ServiceType.ToLower() == "trigger" &&
                                         s.Complexity.ToLower() == "complexo" && s.Category.ToLower() == "operacoes"))
                            </td>
                        </tr>
                        <!-- SQL Função -->
                        <tr>
                            <td class="dev-data">
                                <span class="developement-item">Função</span>
                            </td>
                            <td class="developement-activities">
                                Quantidade de operações.
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "sql" && s.ServiceType.ToLower() == "funcao" &&
                                         s.Complexity.ToLower() == "facil" && s.Category.ToLower() == "operacoes"))
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "sql" && s.ServiceType.ToLower() == "funcao" &&
                                         s.Complexity.ToLower() == "medio" && s.Category.ToLower() == "operacoes"))
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "sql" && s.ServiceType.ToLower() == "funcao" &&
                                         s.Complexity.ToLower() == "complexo" && s.Category.ToLower() == "operacoes"))
                            </td>
                        </tr>
                        <!-- SQL Scripts -->
                        <tr>
                            <td class="dev-data">
                                <span class="developement-item">Scripts</span>
                            </td>
                            <td class="developement-activities">
                                Quantidade de operações.
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "sql" && s.ServiceType.ToLower() == "scripts" &&
                                         s.Complexity.ToLower() == "facil" && s.Category.ToLower() == "operacoes"))
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "sql" && s.ServiceType.ToLower() == "scripts" &&
                                         s.Complexity.ToLower() == "medio" && s.Category.ToLower() == "operacoes"))
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "sql" && s.ServiceType.ToLower() == "scripts" &&
                                         s.Complexity.ToLower() == "complexo" && s.Category.ToLower() == "operacoes"))
                            </td>
                        </tr>
                        <!-- SQL Modelagem -->
                        <tr>
                            <td class="dev-data">
                                <span class="developement-item">Modelagem</span>
                            </td>
                            <td class="developement-activities">
                                Quantidade de operações.
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "sql" && s.ServiceType.ToLower() == "modelagem" &&
                                         s.Complexity.ToLower() == "facil" && s.Category.ToLower() == "operacoes"))
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "sql" && s.ServiceType.ToLower() == "modelagem" &&
                                         s.Complexity.ToLower() == "medio" && s.Category.ToLower() == "operacoes"))
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "sql" && s.ServiceType.ToLower() == "modelagem" &&
                                         s.Complexity.ToLower() == "complexo" && s.Category.ToLower() == "operacoes"))
                            </td>
                        </tr>

                        <!-- API Operação -->
                        <tr>
                            <td class="category-colum">
                                <span class="developement-category">Api</span>
                            </td>
                            <td class="dev-data">
                                <span class="developement-item">Operação</span>
                            </td>
                            <td class="developement-activities">
                                Quantidade de campos/Validações.
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "api" && s.ServiceType.ToLower() == "operacao" &&
                                         s.Complexity.ToLower() == "facil" && s.Category.ToLower() == "operacoes"))
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "api" && s.ServiceType.ToLower() == "operacao" &&
                                         s.Complexity.ToLower() == "medio" && s.Category.ToLower() == "operacoes"))
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "api" && s.ServiceType.ToLower() == "operacao" &&
                                         s.Complexity.ToLower() == "complexo" && s.Category.ToLower() == "operacoes"))
                            </td>
                        </tr>

                        <!-- Serviços Console -->
                        <tr>
                            <td class="category-colum">
                                <span class="developement-category">Serviços</span>
                            </td>
                            <td class="dev-data">
                                <span class="developement-item">Console</span>
                            </td>
                            <td class="developement-activities">
                                Quantidade de operações.
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "servicos" && s.ServiceType.ToLower() == "console" &&
                                         s.Complexity.ToLower() == "facil" && s.Category.ToLower() == "operacoes"))
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "servicos" && s.ServiceType.ToLower() == "console" &&
                                         s.Complexity.ToLower() == "medio" && s.Category.ToLower() == "operacoes"))
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "servicos" && s.ServiceType.ToLower() == "console" &&
                                         s.Complexity.ToLower() == "complexo" && s.Category.ToLower() == "operacoes"))
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        }
        @if (Model.HasTestServices())
        {
            <div class="section-table" align="center">
                <table class="test-budget-table">
                    <thead>
                        <tr>
                            <th class="title-table-head" colspan="5">Matriz de orçamento para Testes</th>
                        </tr>
                        <tr>
                            <th class="table-header">Categoria</th>
                            <th class="table-header">Item</th>
                            <th class="table-header">Simples</th>
                            <th class="table-header">Médio</th>
                            <th class="table-header">Complexo</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Linha para Telas WEB -->
                        <tr>
                            <td class="category-colum">
                                <span class="developement-category">Telas</span>
                            </td>
                            <td class="dev-data">
                                <span class="developement-item">WEB</span>
                            </td>
                            <td class="developement
                            <td class=" service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "telas" && s.ServiceType.ToLower() == "web" &&
                                         s.Complexity.ToLower() == "facil" && s.Category.ToLower() == "testes"))
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "telas" && s.ServiceType.ToLower() == "web" &&
                                         s.Complexity.ToLower() == "medio" && s.Category.ToLower() == "testes"))
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "telas" && s.ServiceType.ToLower() == "web" &&
                                         s.Complexity.ToLower() == "complexo" && s.Category.ToLower() == "testes"))
                            </td>
                        </tr>

                        <!-- Linha para Relatórios PDF -->
                        <tr>
                            <td rowspan="2" class="category-colum">
                                <span class="developement-category">Relatórios</span>
                            </td>
                            <td class="dev-data">
                                <span class="developement-item">PDF</span>
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "relatorios" && s.ServiceType.ToLower() == "pdf" &&
                                         s.Complexity.ToLower() == "facil" && s.Category.ToLower() == "testes"))
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "relatorios" && s.ServiceType.ToLower() == "pdf" &&
                                         s.Complexity.ToLower() == "medio" && s.Category.ToLower() == "testes"))
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "relatorios" && s.ServiceType.ToLower() == "pdf" &&
                                         s.Complexity.ToLower() == "complexo" && s.Category.ToLower() == "testes"))
                            </td>
                        </tr>
                        <tr>
                            <td class="dev-data">
                                <p class="developement-item">Excel / Word</p>
                            </td>

                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "relatorios" && s.ServiceType.ToLower() == "excel_word" &&
                                         s.Complexity.ToLower() == "facil" && s.Category.ToLower() == "testes"))
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "relatorios" && s.ServiceType.ToLower() == "excel_word" &&
                                         s.Complexity.ToLower() == "medio" && s.Category.ToLower() == "testes"))
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "relatorios" && s.ServiceType.ToLower() == "excel_word" &&
                                         s.Complexity.ToLower() == "complexo" && s.Category.ToLower() == "testes"))
                            </td>
                        </tr>
                        <tr>
                            <td rowspan="6" class="category-colum">
                                <span class="developement-category">SQL</span>
                            </td>
                            <td class="dev-data">
                                <span class="developement-item">Procedure</span>
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "sql" && s.ServiceType.ToLower() == "procedure" &&
                                         s.Complexity.ToLower() == "facil" && s.Category.ToLower() == "testes"))
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "sql" && s.ServiceType.ToLower() == "procedure" &&
                                         s.Complexity.ToLower() == "medio" && s.Category.ToLower() == "testes"))
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "sql" && s.ServiceType.ToLower() == "procedure" &&
                                         s.Complexity.ToLower() == "complexo" && s.Category.ToLower() == "testes"))
                            </td>
                        </tr>

                        <!-- SQL Job -->
                        <tr>
                            <td class="dev-data">
                                <span class="developement-item">JOB</span>
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "sql" && s.ServiceType.ToLower() == "job" &&
                                         s.Complexity.ToLower() == "facil" && s.Category.ToLower() == "testes"))
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "sql" && s.ServiceType.ToLower() == "job" &&
                                         s.Complexity.ToLower() == "medio" && s.Category.ToLower() == "testes"))
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "sql" && s.ServiceType.ToLower() == "job" &&
                                         s.Complexity.ToLower() == "complexo" && s.Category.ToLower() == "testes"))
                            </td>
                        </tr>

                        <!-- SQL Trigger -->
                        <tr>
                            <td class="dev-data">
                                <span class="developement-item">Trigger</span>
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "sql" && s.ServiceType.ToLower() == "trigger" &&
                                         s.Complexity.ToLower() == "facil" && s.Category.ToLower() == "testes"))
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "sql" && s.ServiceType.ToLower() == "trigger" &&
                                         s.Complexity.ToLower() == "medio" && s.Category.ToLower() == "testes"))
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "sql" && s.ServiceType.ToLower() == "trigger" &&
                                         s.Complexity.ToLower() == "complexo" && s.Category.ToLower() == "testes"))
                            </td>
                        </tr>
                        <!-- SQL Função -->
                        <tr>
                            <td class="dev-data">
                                <span class="developement-item">Função</span>
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "sql" && s.ServiceType.ToLower() == "funcao" &&
                                         s.Complexity.ToLower() == "facil" && s.Category.ToLower() == "testes"))
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "sql" && s.ServiceType.ToLower() == "funcao" &&
                                         s.Complexity.ToLower() == "medio" && s.Category.ToLower() == "testes"))
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "sql" && s.ServiceType.ToLower() == "funcao" &&
                                         s.Complexity.ToLower() == "complexo" && s.Category.ToLower() == "testes"))
                            </td>
                        </tr>
                        <!-- SQL Scripts -->
                        <tr>
                            <td class="dev-data">
                                <span class="developement-item">Scripts</span>
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "sql" && s.ServiceType.ToLower() == "scripts" &&
                                         s.Complexity.ToLower() == "facil" && s.Category.ToLower() == "testes"))
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "sql" && s.ServiceType.ToLower() == "scripts" &&
                                         s.Complexity.ToLower() == "medio" && s.Category.ToLower() == "testes"))
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "sql" && s.ServiceType.ToLower() == "scripts" &&
                                         s.Complexity.ToLower() == "complexo" && s.Category.ToLower() == "testes"))
                            </td>
                        </tr>
                        <!-- SQL Modelagem -->
                        <tr>
                            <td class="dev-data">
                                <span class="developement-item">Modelagem</span>
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "sql" && s.ServiceType.ToLower() == "modelagem" &&
                                         s.Complexity.ToLower() == "facil" && s.Category.ToLower() == "testes"))
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "sql" && s.ServiceType.ToLower() == "modelagem" &&
                                         s.Complexity.ToLower() == "medio" && s.Category.ToLower() == "testes"))
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "sql" && s.ServiceType.ToLower() == "modelagem" &&
                                         s.Complexity.ToLower() == "complexo" && s.Category.ToLower() == "testes"))
                            </td>
                        </tr>

                        <!-- API Operação -->
                        <tr>
                            <td class="category-colum">
                                <span class="developement-category">Api</span>
                            </td>
                            <td class="dev-data">
                                <span class="developement-item">Operação</span>
                            </td>

                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "api" && s.ServiceType.ToLower() == "operacao" &&
                                         s.Complexity.ToLower() == "facil" && s.Category.ToLower() == "testes"))
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "api" && s.ServiceType.ToLower() == "operacao" &&
                                         s.Complexity.ToLower() == "medio" && s.Category.ToLower() == "testes"))
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "api" && s.ServiceType.ToLower() == "operacao" &&
                                         s.Complexity.ToLower() == "complexo" && s.Category.ToLower() == "testes"))
                            </td>
                        </tr>

                        <!-- Serviços Console -->
                        <tr>
                            <td class="category-colum">
                                <span class="developement-category">Serviços</span>
                            </td>
                            <td class="dev-data">
                                <span class="developement-item">Console</span>
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "servicos" && s.ServiceType.ToLower() == "console" &&
                                         s.Complexity.ToLower() == "facil" && s.Category.ToLower() == "testes"))
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "servicos" && s.ServiceType.ToLower() == "console" &&
                                         s.Complexity.ToLower() == "medio" && s.Category.ToLower() == "testes"))
                            </td>
                            <td class="service-complexity">
                                @displayOrEmpty(Model.Features.SelectMany(f => f.Services)
                                         .Count(s => s.Area.ToLower() == "servicos" && s.ServiceType.ToLower() == "console" &&
                                         s.Complexity.ToLower() == "complexo" && s.Category.ToLower() == "testes"))
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        }
    </div>

    <p><strong>Total de Horas do Projeto:</strong> @Model.BudgetedHours</p>

</body>

</html>
