@model BudgetGenerator.Models.ReportInputModel

<h2>Cadastro de Funcionalidades e Serviços</h2>

<button type="button" id="startReportBtn">Iniciar Novo Relatório</button>

<form asp-action="GenerateReport" method="post" id="formFuncionalidades" style="display:none;">
    <div id="funcionalidadesContainer">

    </div>

    <button type="button" id="addFuncionalidadeBtn" style="display:none;">Adicionar Funcionalidade</button>
    <button type="submit" style="display:none;">Gerar Relatório PDF</button>
</form>

<script>

    async function fetchServiceMatrix() {
        const response = await fetch('/data/matriz_horas.json');
        const matrixData = await response.json();
        return matrixData;
    }


    function populateAreaSelect(selectElement, serviceMatrix, category) {
        selectElement.innerHTML = '<option value="">Selecione</option>';
        const areas = serviceMatrix[category.toLowerCase()];
        for (let area in areas) {
            const option = document.createElement('option');
            option.value = area;
            option.textContent = area.charAt(0).toUpperCase() + area.slice(1);
            selectElement.appendChild(option);
        }
    }


    function populateServiceTypeSelect(selectElement, serviceMatrix, category, area) {
        selectElement.innerHTML = '<option value="">Selecione</option>';
        const services = serviceMatrix[category.toLowerCase()][area.toLowerCase()];
        for (let service in services) {
            const option = document.createElement('option');
            option.value = service;
            option.textContent = service.charAt(0).toUpperCase() + service.slice(1);
            selectElement.appendChild(option);
        }
    }


    async function initializeForm() {
        const serviceMatrix = await fetchServiceMatrix();


        document.getElementById('startReportBtn').addEventListener('click', function () {
            document.getElementById('formFuncionalidades').style.display = 'block';
            document.getElementById('addFuncionalidadeBtn').style.display = 'block';
            document.getElementById('startReportBtn').style.display = 'none';
        });

        let funcionalidadeIndex = 0;
        document.getElementById('addFuncionalidadeBtn').addEventListener('click', function () {
            const container = document.getElementById('funcionalidadesContainer');
            const funcionalidadeDiv = document.createElement('div');
            funcionalidadeDiv.className = 'funcionalidade';
            funcionalidadeDiv.setAttribute('data-funcionalidade-index', funcionalidadeIndex);
            funcionalidadeDiv.innerHTML = `
                <h3>Funcionalidade ${funcionalidadeIndex + 1}</h3>
                <label>Nome da Funcionalidade:</label>
                <input type="text" name="Features[${funcionalidadeIndex}].Name" />

                <label>Descrição:</label>
                <textarea name="Features[${funcionalidadeIndex}].Description" rows="3" cols="40"></textarea>

                <h4>Serviços</h4>
                <div class="servicesContainer" data-service-index="0">
                    <div class="service">
                        <label>Categoria:</label>
                        <select name="Features[${funcionalidadeIndex}].Services[0].Category" class="categorySelect">
                            <option value="">Selecione</option>
                            <option value="Operacoes">Operações</option>
                            <option value="Integracoes">Integrações</option>
                            <option value="Testes">Testes</option>
                        </select>

                        <label>Área:</label>
                        <select name="Features[${funcionalidadeIndex}].Services[0].Area" class="areaSelect">
                            <option value="">Selecione</option>
                        </select>

                        <label>Tipo de Serviço:</label>
                        <select name="Features[${funcionalidadeIndex}].Services[0].ServiceType" class="serviceTypeSelect">
                            <option value="">Selecione</option>
                        </select>

                        <label>Complexidade:</label>
                        <select name="Features[${funcionalidadeIndex}].Services[0].Complexity">
                            <option value="facil">Fácil</option>
                            <option value="medio">Médio</option>
                            <option value="complexo">Complexo</option>
                        </select>
                    </div>
                </div>
                <button type="button" class="addServiceBtn">Adicionar Serviço</button>
            `;
            container.appendChild(funcionalidadeDiv);


            const categorySelect = funcionalidadeDiv.querySelector('.categorySelect');
            const areaSelect = funcionalidadeDiv.querySelector('.areaSelect');
            const serviceTypeSelect = funcionalidadeDiv.querySelector('.serviceTypeSelect');

            categorySelect.addEventListener('change', function () {
                const selectedCategory = categorySelect.value;
                if (selectedCategory) {
                    populateAreaSelect(areaSelect, serviceMatrix, selectedCategory);
                }
            });


            areaSelect.addEventListener('change', function () {
                const selectedCategory = categorySelect.value;
                const selectedArea = areaSelect.value;
                if (selectedCategory && selectedArea) {
                    populateServiceTypeSelect(serviceTypeSelect, serviceMatrix, selectedCategory, selectedArea);
                }
            });

            const addServiceBtn = funcionalidadeDiv.querySelector('.addServiceBtn');
            addServiceBtn.addEventListener('click', function () {
                const servicesContainer = funcionalidadeDiv.querySelector('.servicesContainer');
                let serviceIndex = parseInt(servicesContainer.getAttribute('data-service-index'));

                const serviceDiv = document.createElement('div');
                serviceDiv.className = 'service';
                serviceDiv.innerHTML = `
                    <label>Categoria:</label>
                    <select name="Features[${funcionalidadeIndex}].Services[${serviceIndex}].Category" class="categorySelect">
                        <option value="">Selecione</option>
                        <option value="Operacoes">Operações</option>
                        <option value="Integracoes">Integrações</option>
                        <option value="Testes">Testes</option>
                    </select>

                    <label>Área:</label>
                    <select name="Features[${funcionalidadeIndex}].Services[${serviceIndex}].Area" class="areaSelect">
                        <option value=""></option>
                    </select>

                    <label>Tipo de Serviço:</label>
                    <select name="Features[${funcionalidadeIndex}].Services[${serviceIndex}].ServiceType" class="serviceTypeSelect">
                        <option value="">de Serviço</option>
                    </select>

                    <label>Complexidade:</label>
                    <select name="Features[${funcionalidadeIndex}].Services[${serviceIndex}].Complexity">
                        <option value="facil">Fácil</option>
                        <option value="medio">Médio</option>
                        <option value="complexo">Complexo</option>
                    </select>
                `;

                servicesContainer.appendChild(serviceDiv);

                serviceIndex++;
                servicesContainer.setAttribute('data-service-index', serviceIndex);

                const newCategorySelect = serviceDiv.querySelector('.categorySelect');
                const newAreaSelect = serviceDiv.querySelector('.areaSelect');
                const newServiceTypeSelect = serviceDiv.querySelector('.serviceTypeSelect');

                newCategorySelect.addEventListener('change', function () {
                    const selectedCategory = newCategorySelect.value;
                    if (selectedCategory) {
                        populateAreaSelect(newAreaSelect, serviceMatrix, selectedCategory);
                    }
                });

                newAreaSelect.addEventListener('change', function () {
                    const selectedCategory = newCategorySelect.value;
                    const selectedArea = newAreaSelect.value;
                    if (selectedCategory && selectedArea) {
                        populateServiceTypeSelect(newServiceTypeSelect, serviceMatrix, selectedCategory, selectedArea);
                    }
                });
            });


            document.querySelector('button[type="submit"]').style.display = 'block';

            funcionalidadeIndex++;
        });
    }

    initializeForm();
</script>